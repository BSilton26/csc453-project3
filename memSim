#!/usr/bin/env python3
import argparse

parser = argparse.ArgumentParser(
    prog='memSim',
    description='A virtual memory simulator which translates virtual memory addresses to physical memory addresses.',
    usage='%(prog)s [-h] filename FRAMES PRA')

parser.add_argument('filename') 
parser.add_argument('frames',
                    metavar='FRAMES',
                    nargs='?',
                    type=int,
                    choices=range(1, 257),
                    default=256,
                    help='the number of frames in memory, 1 through 256 inclusive (default: %(default)s)')
parser.add_argument('pra',
                    metavar='PRA',
                    nargs='?',
                    choices=['FIFO', 'LRU', 'OPT'],
                    default='FIFO',
                    help='the page replacement algorithm to use, one of %(choices)s   (default: %(default)s)')


def main():
    args = parser.parse_args()
    filename = args.filename
    num_frames = args.frames
    pra = args.pra

    print(f"filename={filename}, frames={num_frames}, pra={pra}")

    addresses = []
    # Load all addresses into our array
    with open(filename) as file:
        for line in file:
            addresses.append(int(line.strip()))  # Make sure that we strip off whitespace

    print(f"Read addresses: {addresses}")

    tlb = TLB(16)
    page_table = PageTable()
    mem = Memory(num_frames)
    backing_store = BackingStore()

    for address in addresses:


if __name__ == "__main__":
    main()
